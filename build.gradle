buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.0"
group= "talonos" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "cavestokingdoms"

repositories {
    ivy {
        name = 'ThaumCraft 4 API'
        artifactPattern 'https://dl.dropboxusercontent.com/u/47135879/[module](-[classifier])-1.7.10-[revision](.[ext])'
    }
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'Chicken Bones'
        url 'http://chickenbones.net/maven'
    }
}

minecraft {
    version = "1.7.10-10.13.2.1291"
    runDir = "eclipse"
}

dependencies {
    compile 'Azanor:Thaumcraft:4.2.3.5:deobf@jar'
    compile 'Azanor:Baubles:1.0.1.10:deobf@jar'
    compile "mantle:Mantle:1.7.10-0.3.2.jenkins187:deobf"
    compile "tconstruct:TConstruct:1.7.10-1.8.3.build926:deobf"
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

afterEvaluate {
    allprojects { project ->
        if (project.plugins.hasPlugin("idea"))
        {
            idea { module { inheritOutputDirs = true } }
        }
    }
}
